
message(STATUS "Conan: Using autogenerated Findfmt.cmake")
# Global approach
SET(fmt_FOUND 1)
SET(fmt_INCLUDE_DIRS "/home/scott/.conan/data/fmt/5.1.0/bincrafters/stable/package/996ea8408e0c0069e91302635c90f50270a2a97b/include")
SET(fmt_INCLUDES "/home/scott/.conan/data/fmt/5.1.0/bincrafters/stable/package/996ea8408e0c0069e91302635c90f50270a2a97b/include")
SET(fmt_DEFINITIONS )
SET(fmt_LIBRARIES "") # Will be filled later
SET(fmt_LIBRARIES_TARGETS "") # Will be filled later, if CMake 3
SET(fmt_LIBS "") # Same as fmt_LIBRARIES

mark_as_advanced(fmt_FOUND fmt_INCLUDE_DIRS fmt_INCLUDES
                 fmt_DEFINITIONS fmt_LIBRARIES fmt_LIBS)


# Find the real .lib/.a and add them to fmt_LIBS and fmt_LIBRARY_LIST
SET(fmt_LIBRARY_LIST fmt)
SET(fmt_LIB_DIRS "/home/scott/.conan/data/fmt/5.1.0/bincrafters/stable/package/996ea8408e0c0069e91302635c90f50270a2a97b/lib")
foreach(_LIBRARY_NAME ${fmt_LIBRARY_LIST})
    unset(CONAN_FOUND_LIBRARY CACHE)
    find_library(CONAN_FOUND_LIBRARY NAME ${_LIBRARY_NAME} PATHS ${fmt_LIB_DIRS}
                 NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH)
    if(CONAN_FOUND_LIBRARY)
        if(${CMAKE_VERSION} VERSION_LESS "3.0")
            list(APPEND fmt_LIBRARIES ${CONAN_FOUND_LIBRARY})
        else() # Create a micro-target for each lib/a found
            set(_LIB_NAME CONAN_LIB::fmt_${_LIBRARY_NAME})
            add_library(${_LIB_NAME} UNKNOWN IMPORTED)
            set_target_properties(${_LIB_NAME} PROPERTIES IMPORTED_LOCATION ${CONAN_FOUND_LIBRARY})
            list(APPEND fmt_LIBRARIES_TARGETS ${_LIB_NAME})
        endif()
        message(STATUS "Found: ${CONAN_FOUND_LIBRARY}")
    else()
        message(STATUS "Library ${_LIBRARY_NAME} not found in package, might be system one")
        list(APPEND fmt_LIBRARIES_TARGETS ${_LIBRARY_NAME})
        list(APPEND fmt_LIBRARIES ${_LIBRARY_NAME})
    endif()
endforeach()
set(fmt_LIBS ${fmt_LIBRARIES})

if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    # Target approach
    if(NOT TARGET fmt::fmt)
        add_library(fmt::fmt INTERFACE IMPORTED)
        if(fmt_INCLUDE_DIRS)
          set_target_properties(fmt::fmt PROPERTIES
          INTERFACE_INCLUDE_DIRECTORIES "${fmt_INCLUDE_DIRS}")
        endif()
        set_property(TARGET fmt::fmt PROPERTY INTERFACE_LINK_LIBRARIES ${fmt_LIBRARIES_TARGETS} "" "")
        set_property(TARGET fmt::fmt PROPERTY INTERFACE_COMPILE_DEFINITIONS )
        set_property(TARGET fmt::fmt PROPERTY INTERFACE_COMPILE_OPTIONS "" "")
    endif()
    
endif()
