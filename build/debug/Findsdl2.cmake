
message(STATUS "Conan: Using autogenerated Findsdl2.cmake")
# Global approach
SET(sdl2_FOUND 1)
SET(sdl2_INCLUDE_DIRS "/home/scott/.conan/data/sdl2/2.0.8/bincrafters/stable/package/4ccbc2db1180c309921c0bbf78d5d5de51a38d89/include"
			"/home/scott/.conan/data/sdl2/2.0.8/bincrafters/stable/package/4ccbc2db1180c309921c0bbf78d5d5de51a38d89/include/SDL2")
SET(sdl2_INCLUDES "/home/scott/.conan/data/sdl2/2.0.8/bincrafters/stable/package/4ccbc2db1180c309921c0bbf78d5d5de51a38d89/include"
			"/home/scott/.conan/data/sdl2/2.0.8/bincrafters/stable/package/4ccbc2db1180c309921c0bbf78d5d5de51a38d89/include/SDL2")
SET(sdl2_DEFINITIONS )
SET(sdl2_LIBRARIES "") # Will be filled later
SET(sdl2_LIBRARIES_TARGETS "") # Will be filled later, if CMake 3
SET(sdl2_LIBS "") # Same as sdl2_LIBRARIES

mark_as_advanced(sdl2_FOUND sdl2_INCLUDE_DIRS sdl2_INCLUDES
                 sdl2_DEFINITIONS sdl2_LIBRARIES sdl2_LIBS)


# Find the real .lib/.a and add them to sdl2_LIBS and sdl2_LIBRARY_LIST
SET(sdl2_LIBRARY_LIST SDL2main SDL2-2.0 dl rt pthread asound jack pulse)
SET(sdl2_LIB_DIRS "/home/scott/.conan/data/sdl2/2.0.8/bincrafters/stable/package/4ccbc2db1180c309921c0bbf78d5d5de51a38d89/lib")
foreach(_LIBRARY_NAME ${sdl2_LIBRARY_LIST})
    unset(CONAN_FOUND_LIBRARY CACHE)
    find_library(CONAN_FOUND_LIBRARY NAME ${_LIBRARY_NAME} PATHS ${sdl2_LIB_DIRS}
                 NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH)
    if(CONAN_FOUND_LIBRARY)
        if(${CMAKE_VERSION} VERSION_LESS "3.0")
            list(APPEND sdl2_LIBRARIES ${CONAN_FOUND_LIBRARY})
        else() # Create a micro-target for each lib/a found
            set(_LIB_NAME CONAN_LIB::sdl2_${_LIBRARY_NAME})
            add_library(${_LIB_NAME} UNKNOWN IMPORTED)
            set_target_properties(${_LIB_NAME} PROPERTIES IMPORTED_LOCATION ${CONAN_FOUND_LIBRARY})
            list(APPEND sdl2_LIBRARIES_TARGETS ${_LIB_NAME})
        endif()
        message(STATUS "Found: ${CONAN_FOUND_LIBRARY}")
    else()
        message(STATUS "Library ${_LIBRARY_NAME} not found in package, might be system one")
        list(APPEND sdl2_LIBRARIES_TARGETS ${_LIBRARY_NAME})
        list(APPEND sdl2_LIBRARIES ${_LIBRARY_NAME})
    endif()
endforeach()
set(sdl2_LIBS ${sdl2_LIBRARIES})

if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    # Target approach
    if(NOT TARGET sdl2::sdl2)
        add_library(sdl2::sdl2 INTERFACE IMPORTED)
        if(sdl2_INCLUDE_DIRS)
          set_target_properties(sdl2::sdl2 PROPERTIES
          INTERFACE_INCLUDE_DIRECTORIES "${sdl2_INCLUDE_DIRS}")
        endif()
        set_property(TARGET sdl2::sdl2 PROPERTY INTERFACE_LINK_LIBRARIES ${sdl2_LIBRARIES_TARGETS} "" "")
        set_property(TARGET sdl2::sdl2 PROPERTY INTERFACE_COMPILE_DEFINITIONS )
        set_property(TARGET sdl2::sdl2 PROPERTY INTERFACE_COMPILE_OPTIONS "" "")
    endif()
    
endif()
